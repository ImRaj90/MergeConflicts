 # This is a basic workflow to help you get started with Actions

name: Inclusion_Develop

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      target_branch:
        description: enter target branch name
        required: true
      include_feature_branches:
        description: enter feature branches
        required: true
        
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  Promotional_branch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: create promotional branch and merge all features
        run: |
          echo Add other actions to build, target_branch  ${{ github.event.inputs.target_branch }}
          echo test, and deploy your project. include_feature_branches ${{ github.event.inputs.include_feature_branches }}
          include_feature_branches=${{ github.event.inputs.include_feature_branches }}
          git branch
          git pull origin
          git checkout -b promotion-branch-${{github.run_number}}
          git config pull.rebase false
          git config --global user.email "test@gmail.com"
          git config --global user.name "vicky"
          IFS=','
          # Reading the split string into array
          read -ra arr <<< "$include_feature_branches"
          # Print each value of the array by using the loop
          for featurebranch in "${arr[@]}";
          do
          printf "featurebranch = $featurebranch\n"
          git pull origin $featurebranch
          if [ $? -eq 0 ]; then
              echo "Command Executed Successfully"
              echo $featurebranch is the merged into promotion-branch-${{github.run_number}} successfuly
          else
              echo "Conflicts found, please check"
          fi
          done
          git push -u origin promotion-branch-${{github.run_number}}
          echo "successfully published the branches"

        
          
